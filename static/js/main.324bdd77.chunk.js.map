{"version":3,"sources":["SelectDate.jsx","App.js","index.js"],"names":["SelectDate","props","useState","options","text","setText","console","log","onChange","selectedOption","value","App","format","Date","formatDistance","subDays","addSuffix","formatRelative","timeOne","fromUnixTime","stringOne","toString","timeTwo","stringTwo","result","differenceInMilliseconds","monthBegin","startOfMonth","addedMonth","addDays","nextMonth","addMonths","endNextMonth","monthDifference","differenceInDays","id","start_date","end_date","label","rotaMonths","theOptions","setTheOptions","setValue","initialRows","dateValue","dateName","push","date_value","date_name","calendarRows","monthValue","setMonthValue","beginMonth","initialMonth","initialMonthState","setInitialMonthState","initialPickerEnd","add","months","days","monthPickerEnd","setMonthPickerEnd","useEffect","finalMonth","className","e","target","onClick","newOptions","concat","map","i","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.324bdd77.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nexport const SelectDate = (props) => {\r\n  const [text, setText] = useState(props.options[0]);\r\n\r\n  const onChange = (selectedOption) => {\r\n    setText(selectedOption);\r\n    console.log(\"Option Selected:\", selectedOption);\r\n  };\r\n\r\n  console.log(\"Initial Option Selected:\", text);\r\n\r\n  return <Select options={props.options} onChange={onChange} value={text} />;\r\n};\r\n","import \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  format,\n  formatDistance,\n  formatRelative,\n  subDays,\n  getTime,\n  addDays,\n  addMonths,\n  getMonth,\n  startOfMonth,\n  fromUnixTime,\n  differenceInMilliseconds,\n  differenceInDays,\n  add\n} from \"date-fns\";\nimport Select from \"react-select\";\nimport { SelectDate } from \"./SelectDate\";\n\nexport default function App() {\n  format(new Date(), \"'Today is a' eeee\");\n  //=> \"Today is a Sunday\"\n\n  formatDistance(subDays(new Date(), 3), new Date(), { addSuffix: true });\n  //=> \"3 days ago\"\n\n  formatRelative(subDays(new Date(), 3), new Date());\n  //=> \"last Friday at 7:26 p.m.\"\n\n  const timeOne = fromUnixTime(1623049200);\n  const stringOne = timeOne.toString();\n\n  const timeTwo = fromUnixTime(1623135600);\n  const stringTwo = timeTwo.toString();\n\n  const result = differenceInMilliseconds(timeTwo, timeOne);\n\n  //\n\n  const monthBegin = startOfMonth(new Date());\n  const addedMonth = addDays(monthBegin, 14);\n  const nextMonth = addMonths(monthBegin, 1);\n  const endNextMonth = addDays(nextMonth, 14);\n  const monthDifference = differenceInDays(endNextMonth, addedMonth);\n\n  console.log(\"start of rota:\", addedMonth);\n  console.log(\"end of rota:\", endNextMonth);\n\n  //------------------------------\n\n  const [rotaMonths, setRotaMonths] = useState([\n    {\n      id: 0,\n      start_date: \"15-07-15\",\n      end_date: \"14-08-15\",\n      value: \"15 Jul - 14 Aug\",\n      label: \"15 Jul - 14 Aug\"\n    },\n    {\n      id: 1,\n      start_date: \"15-06-15\",\n      end_date: \"14-07-15\",\n      value: \"15 Jun - 14 Jul\",\n      label: \"15 Jun - 14 Jul\"\n    }\n  ]);\n\n  console.log(\"The rotaMonths:\", rotaMonths);\n\n  //------------------------------\n\n  const [theOptions, setTheOptions] = useState([]);\n\n  const [value, setValue] = useState(\"\");\n\n  function runIt(e) {\n    setValue(e.target.value);\n    console.log(value);\n  }\n\n  function handleAdd() {\n    const newOptions = theOptions.concat({ label: value, value: value });\n    setTheOptions(newOptions);\n    console.log(\"The Options Are:\", theOptions);\n  }\n\n  //------------------------------\n\n  const initialRows = [];\n\n  for (let id = 0; id < monthDifference; id++) {\n    const dateValue = addDays(addedMonth, id);\n    const dateName = format(addDays(addedMonth, id), \"EEEE do LLLL\");\n    initialRows.push({ id: id, date_value: dateValue, date_name: dateName });\n  }\n\n  const [calendarRows, setCalendarRows] = useState(initialRows);\n\n  console.log(\"calendar rows\", initialRows);\n\n  //------------------------------\n\n  // This component is the date picker. Using buttons to change the month\n  const [monthValue, setMonthValue] = useState(0);\n\n  const beginMonth = startOfMonth(new Date());\n  const initialMonth = addDays(beginMonth, 14);\n  const [initialMonthState, setInitialMonthState] = useState(initialMonth);\n\n  const initialPickerEnd = format(\n    add(initialMonth, { months: 1, days: -1 }),\n    \"do LLL yyy\"\n  );\n  const [monthPickerEnd, setMonthPickerEnd] = useState(initialPickerEnd);\n\n  useEffect(() => {\n    console.log(\"monthValue\", monthValue);\n    console.log(\"initialMonthState:\", initialMonthState);\n    const finalMonth = format(addMonths(initialMonth, monthValue), \"do LLL\");\n    setInitialMonthState(finalMonth);\n    setMonthPickerEnd(initialPickerEnd);\n  }, [monthValue]);\n\n  //------------------------------\n\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>Start editing to see some magic happen!</h2>\n      <p>{formatDistance}</p>\n      <p>{result}</p>\n      <p>{stringOne}</p>\n      <p>{stringTwo}</p>\n      <p>Start Month: {monthBegin.toString()}</p>\n      <p>Start of Timesheet Month: {addedMonth.toString()}</p>\n      <p>End of Timesheet Month: {endNextMonth.toString()}</p>\n      <p>Difference in Days: {monthDifference.toString()}</p>\n      <input value={value} onChange={runIt} />\n      <button onClick={handleAdd}>Save</button>\n      <button onClick={() => setMonthValue(monthValue - 1)}>-</button>\n      <p>\n        {initialMonthState.toString()} - {monthPickerEnd.toString()}\n      </p>\n      <button onClick={() => setMonthValue(monthValue + 1)}>+</button>\n      <>\n        {calendarRows.map((e, i) => (\n          <p>{e.date_name}</p>\n        ))}\n      </>\n      <SelectDate options={rotaMonths} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}