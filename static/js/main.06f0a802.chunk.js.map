{"version":3,"sources":["SelectDate.jsx","CalendarRow.jsx","App.js","index.js"],"names":["SelectDate","props","useState","options","text","setText","console","log","onChange","selectedOption","value","CalendarRow","shit","tryIt","formatTry","format","date_value","App","Date","formatDistance","subDays","addSuffix","formatRelative","timeOne","fromUnixTime","stringOne","toString","timeTwo","stringTwo","result","differenceInMilliseconds","monthBegin","startOfMonth","addedMonth","addDays","nextMonth","addMonths","endNextMonth","monthDifference","differenceInDays","id","start_date","end_date","label","rotaMonths","theOptions","setTheOptions","setValue","initialRows","dateValue","dateName","push","date_name","calendarRows","monthValue","setMonthValue","beginMonth","initialMonth","initialMonthState","setInitialMonthState","initialPickerEnd","add","months","days","monthPickerEnd","setMonthPickerEnd","useEffect","finalMonth","finalMonthEnd","className","e","target","onClick","newOptions","concat","map","i","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.06f0a802.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nexport const SelectDate = (props) => {\r\n  const [text, setText] = useState(props.options[0]);\r\n\r\n  const onChange = (selectedOption) => {\r\n    setText(selectedOption);\r\n    console.log(\"Option Selected:\", selectedOption);\r\n  };\r\n\r\n  console.log(\"Initial Option Selected:\", text);\r\n\r\n  return <Select options={props.options} onChange={onChange} value={text} />;\r\n};\r\n","import \"./styles.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  format,\r\n  formatDistance,\r\n  formatRelative,\r\n  subDays,\r\n  getTime,\r\n  addDays,\r\n  addMonths,\r\n  getMonth,\r\n  startOfMonth,\r\n  fromUnixTime,\r\n  differenceInMilliseconds,\r\n  differenceInDays,\r\n  add\r\n} from \"date-fns\";\r\nimport Select from \"react-select\";\r\nimport { SelectDate } from \"./SelectDate\";\r\n\r\nexport const CalendarRow = (props) => {\r\n  //------------------------------\r\n\r\n  const [tryIt, setTryIt] = useState(props.shit);\r\n\r\n  const formatTry = format(tryIt.date_value, \"H:mm\");\r\n\r\n  console.log(\"PROPS.E\", tryIt);\r\n\r\n  //------------------------------\r\n\r\n  return (\r\n    <div>\r\n      <p>{formatTry}</p>\r\n    </div>\r\n  );\r\n};\r\n","import \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  format,\n  formatDistance,\n  formatRelative,\n  subDays,\n  getTime,\n  addDays,\n  addMonths,\n  getMonth,\n  startOfMonth,\n  fromUnixTime,\n  differenceInMilliseconds,\n  differenceInDays,\n  add\n} from \"date-fns\";\nimport Select from \"react-select\";\nimport { SelectDate } from \"./SelectDate\";\nimport { CalendarRow } from \"./CalendarRow\";\n\nexport default function App() {\n  format(new Date(), \"'Today is a' eeee\");\n  //=> \"Today is a Sunday\"\n\n  formatDistance(subDays(new Date(), 3), new Date(), { addSuffix: true });\n  //=> \"3 days ago\"\n\n  formatRelative(subDays(new Date(), 3), new Date());\n  //=> \"last Friday at 7:26 p.m.\"\n\n  const timeOne = fromUnixTime(1623049200);\n  const stringOne = timeOne.toString();\n\n  const timeTwo = fromUnixTime(1623135600);\n  const stringTwo = timeTwo.toString();\n\n  const result = differenceInMilliseconds(timeTwo, timeOne);\n\n  //\n\n  const monthBegin = startOfMonth(new Date());\n  const addedMonth = addDays(monthBegin, 14);\n  const nextMonth = addMonths(monthBegin, 1);\n  const endNextMonth = addDays(nextMonth, 14);\n  const monthDifference = differenceInDays(endNextMonth, addedMonth);\n\n  console.log(\"start of rota:\", addedMonth);\n  console.log(\"end of rota:\", endNextMonth);\n\n  //------------------------------\n\n  const [rotaMonths, setRotaMonths] = useState([\n    {\n      id: 0,\n      start_date: \"15-07-15\",\n      end_date: \"14-08-15\",\n      value: \"15 Jul - 14 Aug\",\n      label: \"15 Jul - 14 Aug\"\n    },\n    {\n      id: 1,\n      start_date: \"15-06-15\",\n      end_date: \"14-07-15\",\n      value: \"15 Jun - 14 Jul\",\n      label: \"15 Jun - 14 Jul\"\n    }\n  ]);\n\n  console.log(\"The rotaMonths:\", rotaMonths);\n\n  //------------------------------\n\n  const [theOptions, setTheOptions] = useState([]);\n\n  const [value, setValue] = useState(\"\");\n\n  function runIt(e) {\n    setValue(e.target.value);\n    console.log(value);\n  }\n\n  function handleAdd() {\n    const newOptions = theOptions.concat({ label: value, value: value });\n    setTheOptions(newOptions);\n    console.log(\"The Options Are:\", theOptions);\n  }\n\n  //------------------------------\n\n  const initialRows = [];\n\n  for (let id = 0; id < monthDifference; id++) {\n    const dateValue = addDays(addedMonth, id);\n    const dateName = format(addDays(addedMonth, id), \"EEEE do LLLL\");\n    initialRows.push({ id: id, date_value: dateValue, date_name: dateName });\n  }\n\n  const [calendarRows, setCalendarRows] = useState(initialRows);\n\n  console.log(\"calendar rows\", initialRows);\n\n  //------------------------------\n\n  // This component is the date picker. Using buttons to change the month\n  const [monthValue, setMonthValue] = useState(0);\n\n  const beginMonth = startOfMonth(new Date());\n  const initialMonth = addDays(beginMonth, 14);\n  const [initialMonthState, setInitialMonthState] = useState(initialMonth);\n\n  const initialPickerEnd = add(initialMonth, { months: 1, days: -1 });\n  const [monthPickerEnd, setMonthPickerEnd] = useState(initialPickerEnd);\n\n  useEffect(() => {\n    console.log(\"initialMonthState:\", initialMonthState);\n    const finalMonth = format(addMonths(initialMonth, monthValue), \"do LLL\");\n    setInitialMonthState(finalMonth);\n    const finalMonthEnd = format(\n      addMonths(initialPickerEnd, monthValue),\n      \"do LLL YYY\"\n    );\n    setMonthPickerEnd(finalMonthEnd);\n  }, [monthValue]);\n\n  //------------------------------\n\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>Start editing to see some magic happen!</h2>\n      <p>{formatDistance}</p>\n      <p>{result}</p>\n      <p>{stringOne}</p>\n      <p>{stringTwo}</p>\n      <p>Start Month: {monthBegin.toString()}</p>\n      <p>Start of Timesheet Month: {addedMonth.toString()}</p>\n      <p>End of Timesheet Month: {endNextMonth.toString()}</p>\n      <p>Difference in Days: {monthDifference.toString()}</p>\n      <SelectDate options={rotaMonths} />\n      <input value={value} onChange={runIt} />\n      <button onClick={handleAdd}>Save</button>\n      <button onClick={() => setMonthValue(monthValue - 1)}>-</button>\n      <p>\n        {initialMonthState.toString()} - {monthPickerEnd.toString()}\n      </p>\n      <button onClick={() => setMonthValue(monthValue + 1)}>+</button>\n\n      <table>\n        <tr>\n          <th>Date</th>\n          <th>Expense Type</th>\n          <th>Detail</th>\n          <th>Supplier</th>\n          <th>Gross Amount</th>\n          <th>Receipt</th>\n        </tr>\n        {calendarRows.map((e, i) => (\n          <tr>\n            <td>{e.date_name}</td>\n            <td>\n              <input />\n            </td>\n            <td>\n              <input />\n            </td>\n            <td>\n              <input />\n            </td>\n            <td>\n              <input />\n            </td>\n            <td>\n              <button>Upload Here</button>\n            </td>\n            <CalendarRow shit={e} />\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}